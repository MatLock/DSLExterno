/*
* generated by Xtext
*/
package org.uqbar.paco.dsl.xtext.saludos.ui.quickfix

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.nodemodel.util.NodeModelUtils
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import org.uqbar.paco.dsl.xtext.saludos.saludosDSL.Despedida
import org.uqbar.paco.dsl.xtext.saludos.validation.SaludosDSLValidator


/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class SaludosDSLQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(SaludosDSLValidator.DESPEDIDA_SIN_BIENVENIDA)
	def capitalizeName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Crear Bienvenida', 'Agregar Bienvenida.', null, new ISemanticModification() {
			override apply(EObject element, IModificationContext context) {
				val despedida = element as Despedida
				val aQuien = despedida.AQuien.name
				context.xtextDocument.replace(element.before, element.node.length, "Hola " + aQuien + " ! " + element.node.text)
			}
		})
	}
	
	// utils
	
	def before(EObject element) {
		element.node.offset
	}

	def after(EObject element) {
		element.node.endOffset
	}
	
	def node(EObject element) {
		NodeModelUtils.findActualNodeFor(element)
	}
}
