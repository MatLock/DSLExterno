/*
* generated by Xtext
*/
package org.uqbar.paco.dsl.xtext.saludos.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SaludosDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQuienesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cQuienesAlguienParserRuleCall_0_0 = (RuleCall)cQuienesAssignment_0.eContents().get(0);
		private final Assignment cSaludosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSaludosSaludoParserRuleCall_1_0 = (RuleCall)cSaludosAssignment_1.eContents().get(0);
		
		//Model:
		//	quienes+=Alguien* saludos+=Saludo*;
		public ParserRule getRule() { return rule; }

		//quienes+=Alguien* saludos+=Saludo*
		public Group getGroup() { return cGroup; }

		//quienes+=Alguien*
		public Assignment getQuienesAssignment_0() { return cQuienesAssignment_0; }

		//Alguien
		public RuleCall getQuienesAlguienParserRuleCall_0_0() { return cQuienesAlguienParserRuleCall_0_0; }

		//saludos+=Saludo*
		public Assignment getSaludosAssignment_1() { return cSaludosAssignment_1; }

		//Saludo
		public RuleCall getSaludosSaludoParserRuleCall_1_0() { return cSaludosSaludoParserRuleCall_1_0; }
	}

	public class SaludoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Saludo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBienvenidaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDespedidaParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Saludo:
		//	Bienvenida | Despedida;
		public ParserRule getRule() { return rule; }

		//Bienvenida | Despedida
		public Alternatives getAlternatives() { return cAlternatives; }

		//Bienvenida
		public RuleCall getBienvenidaParserRuleCall_0() { return cBienvenidaParserRuleCall_0; }

		//Despedida
		public RuleCall getDespedidaParserRuleCall_1() { return cDespedidaParserRuleCall_1; }
	}

	public class BienvenidaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Bienvenida");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHolaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAQuienAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAQuienAlguienCrossReference_1_0 = (CrossReference)cAQuienAssignment_1.eContents().get(0);
		private final RuleCall cAQuienAlguienIDTerminalRuleCall_1_0_1 = (RuleCall)cAQuienAlguienCrossReference_1_0.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Bienvenida:
		//	"Hola" aQuien=[Alguien] "!";
		public ParserRule getRule() { return rule; }

		//"Hola" aQuien=[Alguien] "!"
		public Group getGroup() { return cGroup; }

		//"Hola"
		public Keyword getHolaKeyword_0() { return cHolaKeyword_0; }

		//aQuien=[Alguien]
		public Assignment getAQuienAssignment_1() { return cAQuienAssignment_1; }

		//[Alguien]
		public CrossReference getAQuienAlguienCrossReference_1_0() { return cAQuienAlguienCrossReference_1_0; }

		//ID
		public RuleCall getAQuienAlguienIDTerminalRuleCall_1_0_1() { return cAQuienAlguienIDTerminalRuleCall_1_0_1; }

		//"!"
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
	}

	public class DespedidaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Despedida");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChauKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAQuienAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAQuienAlguienCrossReference_1_0 = (CrossReference)cAQuienAssignment_1.eContents().get(0);
		private final RuleCall cAQuienAlguienIDTerminalRuleCall_1_0_1 = (RuleCall)cAQuienAlguienCrossReference_1_0.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Despedida:
		//	"Chau" aQuien=[Alguien] "!";
		public ParserRule getRule() { return rule; }

		//"Chau" aQuien=[Alguien] "!"
		public Group getGroup() { return cGroup; }

		//"Chau"
		public Keyword getChauKeyword_0() { return cChauKeyword_0; }

		//aQuien=[Alguien]
		public Assignment getAQuienAssignment_1() { return cAQuienAssignment_1; }

		//[Alguien]
		public CrossReference getAQuienAlguienCrossReference_1_0() { return cAQuienAlguienCrossReference_1_0; }

		//ID
		public RuleCall getAQuienAlguienIDTerminalRuleCall_1_0_1() { return cAQuienAlguienIDTerminalRuleCall_1_0_1; }

		//"!"
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
	}

	public class AlguienElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Alguien");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuienKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Alguien:
		//	"quien" name=ID;
		public ParserRule getRule() { return rule; }

		//"quien" name=ID
		public Group getGroup() { return cGroup; }

		//"quien"
		public Keyword getQuienKeyword_0() { return cQuienKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	
	
	private ModelElements pModel;
	private SaludoElements pSaludo;
	private BienvenidaElements pBienvenida;
	private DespedidaElements pDespedida;
	private AlguienElements pAlguien;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SaludosDSLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.uqbar.paco.dsl.xtext.saludos.SaludosDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	quienes+=Alguien* saludos+=Saludo*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Saludo:
	//	Bienvenida | Despedida;
	public SaludoElements getSaludoAccess() {
		return (pSaludo != null) ? pSaludo : (pSaludo = new SaludoElements());
	}
	
	public ParserRule getSaludoRule() {
		return getSaludoAccess().getRule();
	}

	//Bienvenida:
	//	"Hola" aQuien=[Alguien] "!";
	public BienvenidaElements getBienvenidaAccess() {
		return (pBienvenida != null) ? pBienvenida : (pBienvenida = new BienvenidaElements());
	}
	
	public ParserRule getBienvenidaRule() {
		return getBienvenidaAccess().getRule();
	}

	//Despedida:
	//	"Chau" aQuien=[Alguien] "!";
	public DespedidaElements getDespedidaAccess() {
		return (pDespedida != null) ? pDespedida : (pDespedida = new DespedidaElements());
	}
	
	public ParserRule getDespedidaRule() {
		return getDespedidaAccess().getRule();
	}

	//Alguien:
	//	"quien" name=ID;
	public AlguienElements getAlguienAccess() {
		return (pAlguien != null) ? pAlguien : (pAlguien = new AlguienElements());
	}
	
	public ParserRule getAlguienRule() {
		return getAlguienAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
